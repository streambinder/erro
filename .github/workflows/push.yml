name: push

on: # yamllint disable-line rule:truthy
  push: null
  pull_request: null

permissions:
  actions: read
  attestations: none
  checks: none
  contents: write
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: codespell-project/actions-codespell@v2
        with:
          check_filenames: true
          ignore_words_list: erro
          skip: it.yml
  super-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ln -sv .github/linters/commitlint.config.js ./
      - uses: super-linter/super-linter/slim@v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: ${{ !contains(github.event_name, 'pull_request') }}
  notify-doc:
    needs: [codespell, super-linter]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - 'docs/**'
      - uses: peter-evans/repository-dispatch@v3
        if: steps.filter.outputs.docs == 'true'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: streambinder/streambinder
          event-type: doc-sync
          client-payload: '{"repo": "${{ github.repository }}", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
  build:
    needs: [codespell, super-linter]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: 3.8.12
          architecture: x64
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y texlive-latex-recommended texlive-fonts-extra
      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Build
        run: make
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: resume
          path: build/*
      - name: Generate date output
        id: date
        run: echo today="$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
      - name: Release
        uses: slord399/action-automatic-releases@v1.0.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.date.outputs.today }}
          prerelease: false
          title: ${{ steps.date.outputs.today }}
          files: build/*
  notify-release:
    needs: [build]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch push event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH_CLAVIS }}
          repository: streambinder/streambinder
          event-type: erro-sync
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
